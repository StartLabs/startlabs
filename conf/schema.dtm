;; NOTE: Make sure to include documentation for EVERY attribute.
;; The application relies heavily on querying its own schema to
;; populate forms and create maps from schema. These queries
;; request the :db/doc value and will fail to return attributes
;; that lack docs.


;; TODO: Maybe I should make partitions for each distinct type
;; of entity? Supposedly this increases performance by hinting
;; to datomic.
;; this would entail, eg:
;; {:db/id #db/id[:db.part/db],
;;  :db/ident :users,
;;  :db.install/_partition :db.part/db}

[
  ;; user
  
{:db/id #db/id[:db.part/db],
  :db/ident :user/id,
  :db/unique :db.unique/identity,
  :db/index true,
  :db/valueType :db.type/string,
  :db/cardinality :db.cardinality/one,
  :db/doc "Example value: 00000000000000",
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db],
  :db/ident :user/gender,
  :db/valueType :db.type/ref,
  :db/cardinality :db.cardinality/one,
  :db/doc "A user gender enum value",
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db],
  :db/ident :user/name,
  :db/valueType :db.type/string,
  :db/cardinality :db.cardinality/one,
  :db/doc "Example value: Fred Example",
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db],
  :db/ident :user/given-name,
  :db/valueType :db.type/string,
  :db/cardinality :db.cardinality/one,
  :db/doc "Example value: Fred",
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db],
  :db/ident :user/locale,
  :db/valueType :db.type/string,
  :db/cardinality :db.cardinality/one,
  :db/doc "Example value: en-US",
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db],
  :db/ident :user/verified-email,
  :db/valueType :db.type/boolean,
  :db/cardinality :db.cardinality/one,
  :db/doc "Example value: true",
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db],
  :db/ident :user/family-name,
  :db/valueType :db.type/string,
  :db/cardinality :db.cardinality/one,
  :db/doc "Example value: Example",
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db],
  :db/ident :user/email,
  :db/valueType :db.type/string,
  :db/cardinality :db.cardinality/one,
  :db/doc "Example value: fred.example@gmail.com",
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db],
  :db/ident :user/picture,
  :db/valueType :db.type/uri,
  :db/cardinality :db.cardinality/one,
  :db/doc "Example value: https://lh5.googleusercontent.com/-2Sv-4bBMLLA/AAAAAAAAAAI/AAAAAAAAABo/bEG4kI2mG0I/photo.jpg",
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db],
  :db/ident :user/bio,
  :db/valueType :db.type/string,
  :db/cardinality :db.cardinality/one,
  :db/doc "Biographical information about a user."
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db],
  :db/ident :user/graduation-year,
  :db/valueType :db.type/long,
  :db/cardinality :db.cardinality/one,
  :db/doc "Example value: 2014",
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db],
  :db/ident :user/link,
  :db/valueType :db.type/uri,
  :db/cardinality :db.cardinality/one,
  :db/doc "Example value: http://ethan.sherbondy.com",
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db],
  :db/ident :user/role,
  :db/valueType :db.type/string,
  :db/fulltext true,
  :db/cardinality :db.cardinality/one,
  :db/doc "Team member role at StartLabs, e.g. webmaster"
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db],
  :db/ident :user/studying,
  :db/valueType :db.type/string,
  :db/fulltext true,
  :db/cardinality :db.cardinality/one,
  :db/doc "E.g. Computer Science"
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db],
  :db/ident :user/access-token,
  :db/valueType :db.type/string,
  :db/cardinality :db.cardinality/one,
  :db/doc "OAuth access token"
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db],
  :db/ident :user/refresh-token,
  :db/valueType :db.type/string,
  :db/cardinality :db.cardinality/one,
  :db/doc "OAuth refresh token"
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db],
  :db/ident :user/expiration,
  :db/valueType :db.type/instant,
  :db/cardinality :db.cardinality/one,
  :db/doc "OAuth expiration date"
  :db.install/_attribute :db.part/db}

   ;; user/gender enum values
 {:db/id #db/id[:db.part/user],
  :db/ident :user.gender/male}

 {:db/id #db/id[:db.part/user],
  :db/ident :user.gender/female}




  ;; jobs

 {:db/id #db/id[:db.part/db],
  :db/ident :job/id,
  :db/unique :db.unique/value,
  :db/index true,
  :db/valueType :db.type/string,
  :db/cardinality :db.cardinality/one,
  :db/doc "A unique identifier for jobs.",
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db],
  :db/ident :job/secret,
  :db/unique :db.unique/value,
  :db/valueType :db.type/string,
  :db/cardinality :db.cardinality/one,
  :db/doc "A secret unique identifier for jobs. Used for editing",
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db],
  :db/ident :job/position,
  :db/valueType :db.type/string,
  :db/cardinality :db.cardinality/one,
  :db/doc "Lab Assistant",
  :db/fulltext true,
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db],
  :db/ident :job/company,
  :db/valueType :db.type/string,
  :db/cardinality :db.cardinality/one,
  :db/doc "StartLabs",
  :db/fulltext true,
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db],
  :db/ident :job/location,
  :db/valueType :db.type/string,
  :db/cardinality :db.cardinality/one,
  :db/doc "City, State (unabbreviated)",
  :db/fulltext true,
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db],
  :db/ident :job/latitude,
  :db/valueType :db.type/double,
  :db/cardinality :db.cardinality/one,
  :db/doc "The latitude of the location.",
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db],
  :db/ident :job/longitude,
  :db/valueType :db.type/double,
  :db/cardinality :db.cardinality/one,
  :db/doc "The longitude of the location.",
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db],
  :db/ident :job/website,
  :db/valueType :db.type/uri,
  :db/cardinality :db.cardinality/one,
  :db/doc "http://www.startlabs.org",
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db],
  :db/ident :job/start-date,
  :db/valueType :db.type/instant,
  :db/cardinality :db.cardinality/one,
  :db/doc "Approximate start date",
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db],
  :db/ident :job/end-date,
  :db/valueType :db.type/instant,
  :db/cardinality :db.cardinality/one,
  :db/doc "Approximate end date",
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db],
  :db/ident :job/description,
  :db/valueType :db.type/string,
  :db/cardinality :db.cardinality/one,
  :db/doc "Requirements, application deadline, etc. Supports Markdown.",
  :db/fulltext true,
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db],
  :db/ident :job/contact-info,
  :db/valueType :db.type/string,
  :db/cardinality :db.cardinality/one,
  :db/doc "Website, email address, or phone number",
  :db.install/_attribute :db.part/db}
  
 {:db/id #db/id[:db.part/db],
  :db/ident :job/founder-name,
  :db/valueType :db.type/string,
  :db/cardinality :db.cardinality/one,
  :db/doc "Your name",
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db],
  :db/ident :job/email,
  :db/valueType :db.type/string,
  :db/cardinality :db.cardinality/one,
  :db/doc "Email address for the confirmation link",
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db],
  :db/ident :job/confirmed?,
  :db/valueType :db.type/boolean,
  :db/cardinality :db.cardinality/one,
  :db/doc "Indicates whether the job was confirmed",
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db],
  :db/ident :job/post-date,
  :db/valueType :db.type/instant,
  :db/cardinality :db.cardinality/one,
  :db/doc "The date that the job was posted (and confirmed)",
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db],
  :db/ident :job/removed?,
  :db/valueType :db.type/boolean,
  :db/cardinality :db.cardinality/one,
  :db/doc "Indicates whether the job has been removed",
  :db.install/_attribute :db.part/db}
  
 {:db/id #db/id[:db.part/db],
  :db/ident :job/approved?,
  :db/valueType :db.type/boolean,
  :db/cardinality :db.cardinality/one,
  :db/doc "Indicates whether the job has been approved by StartLabs",
  :db.install/_attribute :db.part/db}

 ;; no longer used! See :job/role
 {:db/id #db/id[:db.part/db],
  :db/ident :job/fulltime?,
  :db/valueType :db.type/boolean,
  :db/cardinality :db.cardinality/one,
  :db/doc "Is this a fulltime position?",
  :db.install/_attribute :db.part/db}
 
 ;; internship, fulltime, or cofounder? 
 {:db/id #db/id[:db.part/db],
  :db/ident :job/role,
  :db/valueType :db.type/ref,
  :db/cardinality :db.cardinality/one,
  :db/doc "An enum value of the job role, either internship, fulltime, or cofounder",
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db],
  :db/ident :job/company-size,
  :db/valueType :db.type/long,
  :db/cardinality :db.cardinality/one,
  :db/doc "The current number of employees",
  :db.install/_attribute :db.part/db}

  ;; this should really be a ref to
  ;; a separate tags field so that each tag
  ;; is unique, and all tags are better query-able
 {:db/id #db/id[:db.part/db],
  :db/ident :job/tags,
  :db/valueType :db.type/string,
  :db/cardinality :db.cardinality/many,
  :db/doc "Keyword tags associated with a job",
  :db.install/_attribute :db.part/db}
 
 
   ;; job/role enum values
 {:db/id #db/id[:db.part/user],
  :db/ident :job.role/internship}

 {:db/id #db/id[:db.part/user],
  :db/ident :job.role/fulltime}

 {:db/id #db/id[:db.part/user],
  :db/ident :job.role/cofounder}

  ;; job whitelist: NO LONGER USED. See :job/approved?

 {:db/id #db/id[:db.part/db],
  :db/ident :joblist/whitelist,
  :db/valueType :db.type/string,
  :db/cardinality :db.cardinality/one,
  :db/fulltext true,
  :db/doc "Whitelist of company domains that are allowed on the jobs board.",
  :db.install/_attribute :db.part/db}

  ;; upcoming events

 {:db/id #db/id[:db.part/db],
  :db/ident :event/description,
  :db/valueType :db.type/string,
  :db/cardinality :db.cardinality/one,
  :db/doc "Markdown text describing upcoming events",
  :db.install/_attribute :db.part/db}

 ;; career fair payments

 {:db/id #db/id[:db.part/db],
  :db/ident :payment/company,
  :db/valueType :db.type/string,
  :db/cardinality :db.cardinality/one,
  :db/doc "Company name",
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db],
  :db/ident :payment/email,
  :db/valueType :db.type/string,
  :db/cardinality :db.cardinality/one,
  :db/doc "Contact email",
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db],
  :db/ident :payment/description,
  :db/valueType :db.type/string,
  :db/cardinality :db.cardinality/one,
  :db/doc "The reason for the payment",
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db],
  :db/ident :payment/amount,
  :db/valueType :db.type/float,
  :db/cardinality :db.cardinality/one,
  :db/doc "The payment amount",
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db],
  :db/ident :payment/date,
  :db/valueType :db.type/instant,
  :db/cardinality :db.cardinality/one,
  :db/doc "The payment date",
  :db.install/_attribute :db.part/db}


  ;; analytics user

 {:db/id #db/id[:db.part/db],
  :db/ident :analytics/user,
  :db/valueType :db.type/ref,
  :db/cardinality :db.cardinality/one,
  :db/doc "The person whose auth info we use for the Google Analytics API",
  :db.install/_attribute :db.part/db}


  ;; visitors of the space
  {:db/id #db/id[:db.part/db],
   :db/ident :visitor/name,
   :db/valueType :db.type/string,
   :db/cardinality :db.cardinality/one,
   :db/doc "The name of the visitor."
   :db.install/_attribute :db.part/db}

  {:db/id #db/id[:db.part/db],
   :db/ident :visitor/email,
   :db/valueType :db.type/string,
   :db/cardinality :db.cardinality/one,
   :db/doc "The visitor's email address."
   :db.install/_attribute :db.part/db}

  {:db/id #db/id[:db.part/db],
   :db/ident :visitor/id,
   :db/valueType :db.type/string,
   :db/cardinality :db.cardinality/one,
   :db/unique :db.unique/value,
   :db/doc "The visitor's ID card value."
   :db.install/_attribute :db.part/db}
   
;; we infer availability based on proximity of visit date times.
;; e.g. if there were 2 visits in the last 6 hours, then the person
;; is no longer around.
  {:db/id #db/id[:db.part/db],
   :db/ident :visitor/visit-time,
   :db/valueType :db.type/instant,
   :db/cardinality :db.cardinality/many,
   :db/doc "All of the visit dates. Both check-ins and check-outs."
   :db.install/_attribute :db.part/db}
]